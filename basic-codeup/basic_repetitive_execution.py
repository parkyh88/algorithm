######################################1######################################
# 임의의 정수가 줄을 바꿔 계속 입력된다.
# -2147483648 ~ +2147483647, 단 개수는 알 수 없다.
# 0이 아니면 입력된 정수를 출력하고, 0이 입력되면 출력을 중단해보자.
# 예시
# ...
# n = 1      #처음 조건 검사를 통과하기 위해 0 아닌 값을 임의로 저장
# while n!=0 :
#   n = int(input())
#   if n!=0 :
#     print(n)
# ...
# 참고
# if 조건식 :
#   ...
#   ...
# 구조를 사용하면,
# 주어진 조건식의 평가 결과가 True 인 경우에만, 들여쓰기로 구분된 코드블록이 실행된다.
# if 를 while 로 바꾸면?
# while 조건식 :
#   ...
#   ...
# 와 같은 방법으로 반복해서 실행시킬 수 있다.
# 실행되는 과정은
# 1. 조건식을 평가한다.
# 2. True 인 경우 코드블록을 실행한다.
# 3. 다시 조건식을 평가한다.
# 4. True 인 경우 코드블록을 실행한다.
# ...
# ... 조건식의 평가 값이 False 인 경우 반복을 중단하고, 그 다음 명령을 실행한다.
# 조건식의 평가 결과가 True 동안만 반복 실행된다. 
# 반복실행구조 안에 다른 조건/선택실행구조를 넣을 수도 있고...
# 조건/선택실행구조 안에 다른 반복실행구조를 넣을 수도 있다.
n = int(input())

while n != 0:
    if n != 0:
        print(n)
        n = int(input())
        
######################################2######################################
# 정수(1 ~ 100) 1개가 입력되었을 때 카운트다운을 출력해보자.
# while 조건식 :
#   ...
#   ...
# 반복 실행구조를 사용해 보자.
# 예시
# ...
# while n!=0 :
#   print(n)
#   n = n-1
# ...
# 참고
# n = n-1  #n에 저장되어있던 값에서 1만큼 뺀 후, 그 값을 다시 n에 저장시킨다.
# n -= 1 과 같이 짧게 작성할 수도 있다. n -= 1 은 n = n-1 과 같은 의미이다.
# 이렇게 산술연산자(+, -, *, / ... )와 대입 연산자(=)를 함께 쓰는 것을 복합대입연산자라고도 부른다.
# 같은 방법으로 +=, *=, /=, //=, %=, &=, |=, ^=, >>=, <<=, **= 등과 같이 짧게 작성할 수 있다.
# 처음에 조건식을 검사하고, 그 다음에 실행하고, 그 다음에 값을 바꾸고...
# 다시 조건식을 검사하고, 실행하고, 값을 바꾸고...
n = int(input())

while n != 0:
    print(n)
    n = n - 1

