######################################1######################################
# 입력된 정수의 부호를 바꿔 출력해보자.
# 예시 
# ... 
# print(-n) 
# 참고 
# 단항(unary) 연산자인 -(negative)를 변수 앞에 붙이면 부호가 반대인 값이 된다. 
integer = int(input())
print(-integer)

######################################2######################################
# 문자 1개를 입력받아 그 다음 문자를 출력해보자.
# 영문자 'A'의 다음 문자는 'B'이고, 숫자 '0'의 다음 문자는 '1'이다.
# 예시
# ...
# print(chr(n+1))
# 참고
# 숫자는 수를 표현하는 문자로서 '0' 은 문자 그 자체를 의미하고, 0은 값을 의미한다.
# 힌트
# 아스키문자표에서 'A'는 10진수 65로 저장되고 'B'는 10진수 66으로 저장된다.
# 따라서, 문자도 값으로 덧셈을 할 수 있다. 어떤 문자의 값에 1을 더하면 그 다음 문자의 값이 된다.
char = ord(input())
print(chr(char+1))

######################################3######################################
# 정수 2개(a, b)를 입력받아 a에서 b를 뺀 차를 출력하는 프로그램을 작성해보자.
# 예시
# ...
# c = a - b
# print(c)
# 참고
# 수 - 수는 차(subtraction)가 계산된다.
integer_1, integer_2 = input().split()
result = int(integer_1) - int(integer_2)
print(result)
 
######################################4######################################
# 실수 2개(f1, f2)를 입력받아 곱을 출력하는 프로그램을 작성해보자.
# 예시
# ...
# m = f1 * f2
# print(m)
# 참고
# 수 * 수는 곱(multiplication)이 계산된다.
float_1, float_2 = input().split()
result = float(float_1) * float(float_2)
print(result)

######################################5######################################
# 단어와 반복 횟수를 입력받아 여러 번 출력해보자.
# 예시
# w, n = input().split()
# print(w*int(n))
# 참고
# 문자열 * 정수 또는 정수 * 문자열은 그 문자열을 여러 번 반복한 문자열을 만들어 준다.
word, number = input().split()
print(word*int(number))

######################################6######################################
# 반복 횟수와 문장을 입력받아 여러 번 출력해보자.
# 예시
# n = input()
# s = input()
# print(int(n)*s)
# 참고
# 문자열 * 정수 또는 정수 * 문자열은 그 문자열을 여러 번 반복한 문자열을 만들어 준다.
number = input()
string = input()
print(string*int(number))

######################################7######################################
# 정수 2개(a, b)를 입력받아
# a를 b번 곱한 거듭제곱을 출력하는 프로그램을 작성해보자.
# 예시
# ...
# c = a**b
# print(c)
# 참고
# python 언어에서는 거듭제곱을 계산하는 연산자(**)를 제공한다.
# 일반적으로 수학 식에서 거듭제곱을 표현하는 사용하는 서컴플렉스/케릿 기호(^)는 프로그래밍언어에서 다른 의미로 쓰인다.
number_1, number_2 = input().split()
result = int(number_1)**int(number_2)
print(result)
 
######################################8######################################
# 실수 2개(f1, f2)를 입력받아
# f1을 f2번 거듭제곱한 값을 출력하는 프로그램을 작성해보자.

# 참고
# python 언어에서는 거듭제곱(exponentiation)을 계산하는 연산자(**)를 제공한다.
# 일반적으로 수학 식에서 거듭제곱을 표현하는 사용하는 서컴플렉스/케릿 기호(^)는 프로그래밍언어에서 다른 의미로 쓰인다.
float_1, float_2 = input().split()
result = float(float_1)**float(float_2)
print(result)

######################################9######################################
# 정수 2개(a, b) 를 입력받아 a를 b로 나눈 몫을 출력해보자.

# 예시
# ...
# print(a//b)
# 참고
# python언어에서는 나눈 몫을 계산하는 연산자(//, floor division)를 제공한다.
# a//b 와 같이 작성하면, a를 b로 나눈 몫(quotient)을 계산해준다.
# 프로그래밍언어에 따라 이렇게 몫을 계산해주는 연산자가 없는 경우도 있다.
# 실수로 나눈 몫이 어떻게 계산될지도 생각해보자.
number_1, number_2 = input().split()
result = int(number_1)//int(number_2)
print(result)
 
######################################10######################################
# 정수 2개(a, b) 를 입력받아 a를 b로 나눈 나머지를 출력해보자.
# 예시
# ...
# print(a%b)
# 참고
# python 언어에서는 나눈 나머지를 계산하는 연산자(%, remainder)를 제공한다.
# a%b 와 같이 작성하면, a를 b로 나눈 나머지(remainder)를 계산해준다.
# 나머지 연산(modulus, mod 연산)은 수학자 가우스가 생각해 낸 연산으로,
# 어떤 수를 다른 수로 나누고 난 후 남는 나머지를 계산하는 연산이다.
# 실수로 나눈 나머지가 어떻게 계산될지도 생각해보자.
number_1, number_2 = input().split()
result = int(number_1)%int(number_2)
print(result)

######################################11######################################
# 실수 2개(f1, f2)를 입력받아
# f1 을 f2 로 나눈 값을 출력해보자. 이 때 소숫점 넷째자리에서 반올림하여 무조건 소숫점 셋째 자리까지 출력한다.
# 참고
# python 언어에는 나눗셈(division)을 계산하는 연산자(/)가 있다.
# 컴퓨터 프로그래밍에서 실수 변환이나 실수를 사용하는 계산은 
# 정확하게 변환되거나 계산되는 것이 아니라, 거의 모두 근사값으로 계산되는 것이라고 할 수 있다.  
# 실수가 컴퓨터로 저장되기 위해서는 디지털방식으로 2진 정수화되어 저장되어야 하는데, 
# 그 과정에서 아주 작은 부분이 저장되지 않고 사라지는 잘림(truncation) 오차가 자주 발생하기 때문이다.
# 계산 결과값 중에서 믿을 수 있는 숫자의 개수를 의미하는, 유효숫자에 대해 찾아보자. 
# 과학실험에서 온도나 부피를 측정할 때에도 유효숫자는 중요하다. 
float_1, float_2 = input().split()
result = float(float_1)/float(float_2)
print(format(result, '.3f'))

######################################12######################################
# 정수 2개(a, b)를 입력받아 합, 차, 곱, 몫, 나머지, 나눈 값을 자동으로 계산해보자.
# 단, b는 0이 아니다.
number_1, number_2 = input().split()
# 합
sum = int(number_1)+int(number_2)
# 차
subtract = int(number_1)-int(number_2)
# 곱
multiply = int(number_1)*int(number_2)
# 몫
share = int(number_1)//int(number_2)
# 나머지
remain = int(number_1)%int(number_2)
# 나눈 값
divide = int(number_1)/int(number_2)

print(f"{sum}\n{subtract}\n{multiply}\n{share}\n{remain}\n{format(divide, '.2f')}")

######################################13######################################
# 정수 3개를 입력받아 합과 평균을 출력해보자.
# 참고
# 공백으로 구분된 한 줄로 값들을 입력받기 위해서는
# a, b, c = input().split()
# 과 같은 방법이 가능하고,
# 공백으로 구분해 두 값을 출력하기 위해서는
# print(d, e)
# 와 같은 방법이 가능하다.
# 잘라낸 값들은 그 값의 특성(정수, 실수, 문자, 문자열 ...)에 따라 명확하게 변환시킨 후 사용하는 것이 좋다.
# python 프로그래밍을 처음 배울 때 좋은 습관(단계)
# 1. 입력된 문자열을 정확하게 잘라낸다.(공백, 줄바꿈, 구분문자 등에 따라 정확하게 잘라낸다.)
# 2. 잘라낸 데이터들을 데이터형에 맞게 변환해 변수에 저장한다. (정수, 실수, 문자, 문자열 등에 따라 정확하게 변환한다.)
# 3. 값을 저장했다가 다시 사용하기 위해, 변수를 이용해 값을 저장하고, 변수를 이용해 계산을 한다.
# 4. 원하는 결과 값을 필요한 형태로 만들어 출력한다.(공백, 줄바꿈, 구분자, 등에 따라 원하는 형태로 만들어 출력한다.)
number_1, number_2, number_3 = input().split()
sum = int(number_1)+int(number_2)+int(number_3)
avg = int(sum) / 3
print(sum, format(avg, '.2f'))